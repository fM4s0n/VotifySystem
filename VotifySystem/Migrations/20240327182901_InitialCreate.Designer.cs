// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotifyDataAccess.Database;

#nullable disable

namespace VotifySystem.Migrations
{
    [DbContext(typeof(VotifyDatabaseContext))]
    [Migration("20240327182901_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("VotifySystem.Common.Classes.Candidate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstituencyId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ElectionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PartyId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VotesReceived")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Candidate", (string)null);
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Constituency", b =>
                {
                    b.Property<string>("ConstituencyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstituencyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ElectionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ConstituencyId");

                    b.ToTable("Constituency", (string)null);
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Elections.Election", b =>
                {
                    b.Property<string>("ElectionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ElectionAdministratorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("election_type")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.HasKey("ElectionId");

                    b.HasIndex("ElectionAdministratorId");

                    b.ToTable("Election", (string)null);

                    b.HasDiscriminator<string>("election_type").HasValue("Election");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Elections.ElectionVoter", b =>
                {
                    b.Property<string>("ElectionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("VoterId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasVoted")
                        .HasColumnType("INTEGER");

                    b.HasKey("ElectionId", "VoterId");

                    b.ToTable("ElectionVoter", (string)null);
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.LoginCode", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Used")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("LoginCode", (string)null);
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Party", b =>
                {
                    b.Property<string>("PartyId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PartyId");

                    b.ToTable("Party", (string)null);
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Elections.FirstPastThePostElection", b =>
                {
                    b.HasBaseType("VotifySystem.Common.Classes.Elections.Election");

                    b.HasDiscriminator().HasValue("FPTP_Election");
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Elections.SingleTransferrableVoteElection", b =>
                {
                    b.HasBaseType("VotifySystem.Common.Classes.Elections.Election");

                    b.HasDiscriminator().HasValue("STV_Election");
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Administrator", b =>
                {
                    b.HasBaseType("VotifySystem.Common.Classes.User");

                    b.ToTable("Administrator", (string)null);
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Voter", b =>
                {
                    b.HasBaseType("VotifySystem.Common.Classes.User");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Country")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.ToTable("Voter", (string)null);
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Elections.Election", b =>
                {
                    b.HasOne("VotifySystem.Common.Classes.User", "ElectionAdministrator")
                        .WithMany()
                        .HasForeignKey("ElectionAdministratorId");

                    b.Navigation("ElectionAdministrator");
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Administrator", b =>
                {
                    b.HasOne("VotifySystem.Common.Classes.User", null)
                        .WithOne()
                        .HasForeignKey("VotifySystem.Common.Classes.Administrator", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VotifySystem.Common.Classes.Voter", b =>
                {
                    b.HasOne("VotifySystem.Common.Classes.User", null)
                        .WithOne()
                        .HasForeignKey("VotifySystem.Common.Classes.Voter", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
